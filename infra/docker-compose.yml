version: '3'
services:
  db:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - "db-data:/data/db"
  db-setup:
    build: hygieia/db
    depends_on:
      - db
  api:
    image: cklassen/hygieia-api
    depends_on:
      - db-setup
    ports:
      - "8080:8080"
  apiaudit:
    build: ./apiaudit
    depends_on:
      - db-setup
    ports:
      - "8084:8080"
    environment:
      MONGO_PORT: tcp://db:27017
      SPRING_DATA_MONGODB_DATABASE: dashboarddb
      SPRING_DATA_MONGODB_USERNAME: dashboarduser
      SPRING_DATA_MONGODB_PASSWORD: dbpassword
  ui:
    image: cklassen/hygieia-ui
    depends_on:
      - api
    ports:
      - "3000:80"
  gitlab-feature-collector:
    image: cklassen/hygieia-gitlab-feature-collector
    depends_on:
      - db-setup
    environment:
      MONGO_PORT: tcp://db:27017
      HYGIEIA_API_ENV_SPRING_DATA_MONGODB_DATABASE: dashboarddb
      HYGIEIA_API_ENV_SPRING_DATA_MONGODB_USERNAME: dashboarduser
      HYGIEIA_API_ENV_SPRING_DATA_MONGODB_PASSWORD: dbpassword
      GITLAB_HOST: gitlab
      GITLAB_API_TOKEN: token
  gitlab-scm-collector:
    image: cklassen/hygieia-gitlab-scm-collector
    depends_on:
      - db-setup
    environment:
      MONGO_PORT: tcp://db:27017
      HYGIEIA_API_ENV_SPRING_DATA_MONGODB_DATABASE: dashboarddb
      HYGIEIA_API_ENV_SPRING_DATA_MONGODB_USERNAME: dashboarduser
      HYGIEIA_API_ENV_SPRING_DATA_MONGODB_PASSWORD: dbpassword
      GITLAB_HOST: gitlab
      GITLAB_API_TOKEN: token
  jenkins-build-collector:
    image: cklassen/hygieia-jenkins-build-collector
    depends_on:
      - db-setup
    environment:
      MONGO_HOST: tcp://db:27017
      MONGO_PORT: tcp://db:27017
      HYGIEIA_API_ENV_SPRING_DATA_MONGODB_DATABASE: dashboarddb
      HYGIEIA_API_ENV_SPRING_DATA_MONGODB_USERNAME: dashboarduser
      HYGIEIA_API_ENV_SPRING_DATA_MONGODB_PASSWORD: dbpassword
      JENKINS_MASTER: http://jenkins:8080
  sonar-codequality-collector:
    image: cklassen/hygieia-sonar-codequality-collector
    depends_on:
      - db-setup
    environment:
      MONGO_HOST: tcp://db:27017
      MONGO_PORT: tcp://db:27017
      HYGIEIA_API_ENV_SPRING_DATA_MONGODB_DATABASE: dashboarddb
      HYGIEIA_API_ENV_SPRING_DATA_MONGODB_USERNAME: dashboarduser
      HYGIEIA_API_ENV_SPRING_DATA_MONGODB_PASSWORD: dbpassword
      SONAR_URL: http://sonarqube:9000
      SONAR_VERSION: "6.72"
  jenkins:
    ports:
    - "8085:8080"
    build: ./jenkins
    image: jenkins
  gitlab:
    ports:
    - "10022:22"
    - "10080:80"
    image: gitlab/gitlab-ce
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        initial_root_password 'password'
    hostname: gitlab
  artifactory:
    build: ./artifactory
    image: artifactory
    ports:
    - "9001:8081"
  sonarqube:
    image: sonarqube:6.7.2
    ports:
    - "9000:9000"
#  grafana:
#    ports:
#    - "3030:3000"
#    build: ./grafana
#    image: grafana
#    links:
#    - prometheus
#  prometheus:
#    ports:
#    - "9090:9090"
#    volumes:
#    - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    command:
#    - '--config.file=/etc/prometheus/prometheus.yml'
#    image: prom/prometheus
  chef-server:
    build: ./chef-server
    image: chef-server
    entrypoint:
    - knife
    - serve
    - --chef-zero-host
    - chef-server
    - --chef-zero-port
    - '8889'
    - --chef-repo-path
    - /root/.chef/local-mode-cache
  sit:
    build: ./tomcat
    image: sit
    hostname: sit
    ports:
    - "8081:8080"
    privileged: true
  sit_db:
    image: postgres
    ports:
    - "5432:5432"
    environment:
    - POSTGRES_DB=data
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
  uat:
    build: ./tomcat
    image: uat
    hostname: uat
    ports:
    - "8082:8080"
    privileged: true
  uat_db:
    image: postgres
    environment:
    - POSTGRES_DB=data
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
  prod:
    build: ./tomcat
    image: prod
    hostname: prod
    ports:
    - "8083:8080"
    privileged: true
  prod_db:
    image: postgres
    environment:
    - POSTGRES_DB=data
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
volumes:
  db-data:
